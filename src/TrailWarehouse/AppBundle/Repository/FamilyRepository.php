<?php

namespace TrailWarehouse\AppBundle\Repository;
use TrailWarehouse\AppBundle\Entity\Brand;
use TrailWarehouse\AppBundle\Entity\Family;
use TrailWarehouse\AppBundle\Entity\Category;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Query;

/**
 * FamilyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FamilyRepository extends CommonRepository
{
  /**
   * @param Category $category
   * @return Family ...
   */
  public function getByCategory(Category $category, $as_array = true) {
    return $this->getBy('category', $category, $as_array);
  }

  /**
   * @param Brand $brand
   * @return Family ...
   */
  public function getByBrand(Brand $brand, $as_array = true) {
    return $this->getBy('brand', $brand, $as_array);
  }

  /**
   * @param Category ... $categories
   * @return Family ...
   */
  public function getByCategories(Array $categories, $as_array = true) {
    return $this->getByArray('category', $categories, $as_array);
  }

  /**
   * @param Brand ... $brands
   * @return Array (Family)
   */
  public function getByBrands(Array $brands, $as_array = true) {
    return $this->getByArray('brand', $brands, $as_array);
  }

  /**
   *
   */
  public function getBestReviews($count = 5, $as_array = true)
  {
    $query = $this->_em->createQueryBuilder()
      ->addSelect('family.id', 'family.name')
      ->addSelect('AVG(review.rating) AS average')
      ->from('TrailWarehouseAppBundle:Family', 'family')
      ->leftJoin('family.reviews', 'review')
      ->groupBy('review.family, family.id')
      ->orderBy('average', 'desc')
      ->setFirstResult(0)
      ->setMaxResults($count)
      ->getQuery()
    ;
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }

  /**
   *
   */
  public function getBestOfCategory($category, $count = 5, $as_array = true)
  {
    $query = $this->createQueryBuilder('family')
      ->addSelect('visuels')
      ->innerJoin('family.category', 'category')
      ->leftJoin('family.visuels', 'visuels')
      ->leftJoin('family.reviews', 'review')
      ->where('family.category = :category')
      ->setParameter('category', $category)
      ->orderBy('family.averageRating', 'desc')
      ->setFirstResult(0)
      ->setMaxResults($count)
      ->getQuery()
    ;
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }

  /* ----- Private Methods ----- */
  protected function getBuilder() {
    return $this->createQueryBuilder($this->entity_name)
      ->addSelect('category')
      ->addSelect('brand')
      ->innerJoin($this->entity_name.'.category', 'category')
      ->innerJoin($this->entity_name.'.brand', 'brand')
    ;
  }

}
