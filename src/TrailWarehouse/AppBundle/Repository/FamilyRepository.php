<?php

namespace TrailWarehouse\AppBundle\Repository;
use TrailWarehouse\AppBundle\Entity\Brand;
use TrailWarehouse\AppBundle\Entity\Family;
use TrailWarehouse\AppBundle\Entity\Category;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping\Entity;

/**
 * FamilyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FamilyRepository extends CommonRepository
{

  /**
   * @return Family ...
   */
  public function getAll() {
    $builder = $this->_em->createQueryBuilder();
    $builder
      ->select('family')
      ->addSelect('category')
      ->addSelect('brand')
      ->from($this->_entityName, 'family')
      ->innerJoin('family.category', 'category')
      ->innerJoin('family.brand', 'brand')
    ;
    return $builder
      ->getQuery()
      ->getArrayResult()
    ;
  }

  /**
   * @param string $field
   * @param mixed $value
   *
   * @return Family ...
   */
  public function getBy($field, $value) {
    $builder = $this->_em->createQueryBuilder();
    return $builder
      ->select('family')
      ->addSelect('category')
      ->addSelect('brand')
      ->from($this->_entityName, 'family')
      ->innerJoin('family.category', 'category')
      ->innerJoin('family.brand', 'brand')
      ->where('family.'. $field .' = :'. $field)
      ->setParameter($field, $value)
      ->getQuery()
      ->getArrayResult()
    ;
  }

  /**
  * @param string $entity_name
  * @param Array $entities
  * @return Family ...
  */
  public function getByArray($entity_name, Array $entities) {
    $builder = $this->_em->createQueryBuilder();
    $builder
    ->select('family')
    ->addSelect('category')
    ->addSelect('brand')
    ->from($this->_entityName, 'family')
    ->innerJoin('family.category', 'category')
    ->innerJoin('family.brand', 'brand')
    ;
    foreach ($entities as $entity) {
      $builder
        ->orWhere('family.'. $entity_name .' = :entity')
        ->setParameter('entity', $entity)
      ;
    }
    return $builder
    ->getQuery()
    ->getArrayResult()
    ;
  }

  /**
   * @param Category $category
   * @return Family ...
   */
  public function getByCategory(Category $category) {
    return $this->getBy('category', $category);
  }

  /**
   * @param Brand $brand
   * @return Family ...
   */
  public function getByBrand(Brand $brand) {
    return $this->getBy('brand', $brand);
  }

  /**
   * @param Category ... $categories
   * @return Family ...
   */
  public function getByCategories(Category ...$categories) {
    return $this->getByArray('category', $categories);
  }

  /**
   * @param Brand ... $brands
   * @return Array (Family)
   */
  public function getByBrands(Brand ...$brands) {
    return $this->getByArray('brand', $brands);
  }

}
