<?php

namespace TrailWarehouse\AppBundle\Repository;
use TrailWarehouse\AppBundle\Entity\Brand;
use TrailWarehouse\AppBundle\Entity\Family;
use TrailWarehouse\AppBundle\Entity\Category;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Query;

/**
 * FamilyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FamilyRepository extends CommonRepository
{

  /**
   * @return Family ...
   */
  public function getAll($as_array = true) {
    $query = $this->getBuilder()->getQuery();
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }

  /**
   * @param string $field
   * @param mixed $value
   *
   * @return Family ...
   */
  public function getBy($field, $value, $as_array = true) {
    $query = $this->getBuilder()
      ->where('family.'. $field .' = :'. $field)
      ->setParameter($field, $value)
      ->getQuery()
    ;
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }

  /**
   * @param string $field
   * @param mixed $value
   *
   * @return Family ...
   */
  public function getOneBy($field, $value, $as_array = true) {
    $query = $this->getBuilder()
      ->where('family.'. $field .' = :'. $field)
      ->setParameter($field, $value)
      ->setMaxResults(1)
      ->getQuery()
    ;
    return $as_array ? $query->getOneOrNullResult(Query::HYDRATE_ARRAY) : $query->getOneOrNullResult();
  }

  /**
  * @param string $entity_name
  * @param Array $entities
  * @return Family ...
  */
  public function getByArray($entity_name, Array $entities, $as_array = true) {
    $builder = $this->getBuilder();
    foreach ($entities as $entity) {
      $builder
        ->orWhere('family.'. $entity_name .' = :entity')
        ->setParameter('entity', $entity)
      ;
    }
    $query = $builder->getQuery();
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }

  /**
   * @param Category $category
   * @return Family ...
   */
  public function getByCategory(Category $category, $as_array = true) {
    return $this->getBy('category', $category, $as_array);
  }

  /**
   * @param Brand $brand
   * @return Family ...
   */
  public function getByBrand(Brand $brand, $as_array = true) {
    return $this->getBy('brand', $brand, $as_array);
  }

  /**
   * @param Category ... $categories
   * @return Family ...
   */
  public function getByCategories(Array $categories, $as_array = true) {
    return $this->getByArray('category', $categories, $as_array);
  }

  /**
   * @param Brand ... $brands
   * @return Array (Family)
   */
  public function getByBrands(Array $brands, $as_array = true) {
    return $this->getByArray('brand', $brands, $as_array);
  }

  /**
   *
   */
  public function getBestReviews($count = 5, $as_array = true)
  {
    $query = $this->_em->createQueryBuilder()
      ->addSelect('family.id', 'family.name')
      ->addSelect('AVG(review.rating) AS average')
      ->from('TrailWarehouseAppBundle:Family', 'family')
      ->leftJoin('family.reviews', 'review')
      ->groupBy('review.family, family.id')
      ->orderBy('average', 'desc')
      ->setFirstResult(0)
      ->setMaxResults(5)
      ->getQuery()
    ;
    return $as_array ? $query->getArrayResult() : $query->getResult();
  }
  // public function getBestReviews($count = 5, $as_array = true)
  // {
  //   $query = $this->getBuilder('family')
  //     ->orderBy('family.averageRating', 'desc')
  //     ->setMaxResults($count)
  //     ->getQuery()
  //   ;
  // return $as_array ? $query->getArrayResult() : $query->getResult();
  // }

  /* ----- Private Methods ----- */
  private function getBuilder() {
    return $this->_em->createQueryBuilder()
      ->select('family')
      ->addSelect('category')
      ->addSelect('brand')
      ->from($this->_entityName, 'family')
      ->innerJoin('family.category', 'category')
      ->innerJoin('family.brand', 'brand')
    ;
  }

}
