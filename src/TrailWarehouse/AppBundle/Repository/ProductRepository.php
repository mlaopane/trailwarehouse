<?php

namespace TrailWarehouse\AppBundle\Repository;
use TrailWarehouse\AppBundle\Entity\Product;
use Doctrine\ORM\Query;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends CommonRepository
{
  /**
   * Get all Entities
   *
   * @return Array of arrays
   */
  public function getAll() {
    return $this->getBuilder()
      ->getQuery()
      ->getArrayResult()
    ;
  }

  /**
   * Get one Entity
   *
   * @return Array
   */
  public function getOneBy($field, $value) {
    return $this->getBuilder()
      ->where('entity.'.$field.' = :value')
      ->setParameter('value', $value)
      ->setMaxResults(1)
      ->getQuery()
      ->getOneOrNullResult(Query::HYDRATE_ARRAY)
    ;
  }

  /**
   * Get Entities by parameters
   *
   * @param Array $parameters
   *
   * @return Array of arrays
   */
  public function getBy(Array $parameters)
  {
    $builder = $this->getBuilder();
    foreach ($parameters as $field => $value) {
      $builder
        ->andWhere('entity.'. $field .' = :'. $field)
        ->setParameter($field, $value)
      ;
    }
    return $builder
      ->getQuery()
      ->getArrayResult()
    ;
  }

  /**
   * @param string $field
   * @param mixed $value
   *
   */
  public function getColorsBy($field, $value)
  {
    return $this->getBuilder()
      ->where('entity.'. $field .' = :'. $field)
      ->setParameter($field, $value)
      ->groupBy('entity.color')
      ->getQuery()
      ->getArrayResult()
    ;
  }


  /**
   * Get Builder
   *
   * @return QueryBuilder (with joined entities)
   */
  private function getBuilder()
  {
    $fields = ['family', 'color', 'size'];
    $builder = $this->createQueryBuilder('entity');
    foreach ($fields as $field) {
      $builder
        ->addSelect($field)
        ->innerJoin('entity.'.$field, $field)
      ;
    }
    return $builder;
  }

}
